 Here is the question, please submit the answer by 2020-02-24 17:28:01 UTC
Developer Test

The tests should be written in the language of your choosing.

The test should be executable from the console, or provided in source files (donâ€™t include binaries, but just instructions on how to complie/run).
Test 1

Write a function that returns all the possible paths from A to H. Use the graph below. (Every node can be visited only once in each path.)

Test 2

Write a function that returns the shortest path in terms of number of edges, from A to H. Use the same graph.
Test 3

Develop a Single Page Application that:

    Renders the above graph, you may use the Sigma library to render it. (Or any other libraries as you like)
    You can use the following JSON data to render the chart. One edge has been highlighted in green to show you how you can change color of an edge. (Note: the XY coordinates in the JSON data below are _only_ used for rendering and no need to factor them into "distance" calculation)
    The SPA should have 2 <select> boxes: Source and Destination. It should highlight the shortest path from Source to Destination.

{
  "nodes": [
    { "id": "nA", "label": "A", "x": 1, "y": 1, "size": 24 },
    { "id": "nB", "label": "B", "x": 3, "y": 1, "size": 24 },
    { "id": "nC", "label": "C", "x": 2, "y": 4, "size": 24 },
    { "id": "nD", "label": "D", "x": 1, "y": 6, "size": 24 },
    { "id": "nE", "label": "E", "x": 6, "y": 2, "size": 24 },
    { "id": "nF", "label": "F", "x": 5, "y": 4, "size": 24 },
    { "id": "nG", "label": "G", "x": 6, "y": 6, "size": 24 },
    { "id": "nH", "label": "H", "x": 8, "y": 6, "size": 24 }
  ],
  "edges": [
    { "id": "e0", "source": "nA", "target": "nB", "color": "#0000ff" },
    { "id": "e1", "source": "nA", "target": "nD" },
    { "id": "e2", "source": "nA", "target": "nC" },
    { "id": "e3", "source": "nB", "target": "nE" },
    { "id": "e4", "source": "nB", "target": "nC" },
    { "id": "e5", "source": "nB", "target": "nF" },
    { "id": "e6", "source": "nC", "target": "nF" },
    { "id": "e7", "source": "nD", "target": "nG" },
    { "id": "e8", "source": "nE", "target": "nG" },
    { "id": "e9", "source": "nF", "target": "nG" },
    { "id": "e10", "source": "nG", "target": "nH" }
  ]
}

Once you are done, please:

    Pack all your source files and answers into a .zip file
    Calculate SHA256 checksum of your .zip file and send that by email to chris.yuen@diginex.com
    Then, upload your .zip file to a cloud storage such as Dropbox or Google Drive, and share the link to the file and send that link via another email. The above step is important because sometimes email providers block emails with link to files, especially if they contain code files like .js. If we cannot receive your email we may ask you to send again. We will then use the SHA256 checksum to verify that the time limit was honored. So please keep the .zip file until you hear from us in case you need to upload it again.

